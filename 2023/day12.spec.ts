import { getArrangements, part1, part2 } from './day12';

describe('day 00', () => {
  const input = `???.### 1,1,3
.??..??...?##. 1,1,3
?#?#?#?#?#?#?#? 1,3,1,6
????.#...#... 4,1,1
????.######..#####. 1,6,5
?###???????? 3,2,1`;

  it('should solve part 1', () => {
    expect(part1(input)).toBe(21);
  });

  it.each`
    line                                 | count
    ${'???.### 1,1,3'}                   | ${1}
    ${'.??..??...?##. 1,1,3'}            | ${4}
    ${'?#?#?#?#?#?#?#? 1,3,1,6'}         | ${1}
    ${'????.#...#... 4,1,1'}             | ${1}
    ${'????.######..#####. 1,6,5'}       | ${4}
    ${'?###???????? 3,2,1'}              | ${10}
    ${'.##.?#??.#.?# 2,1,1,1'}           | ${1}
    ${'###.### 3'}                       | ${0}
    ${'???#??.??????.??#.. 4,3'}         | ${3}
    ${'#???.#?#.#??#??#.?? 4,1,1,5,1,1'} | ${2}
    ${'???# 3,1'}                        | ${0}
    ${'.#??#?.??????# 1,3,3,1'}          | ${3}
  `('for line $line have $count arrangements', ({ line, count }) => {
    if (count === 0) expect(getArrangements(line)).toBe(count);
  });

  it('should solve part 2', () => {
    expect(part2(input)).toBe(525152);
  });
});
